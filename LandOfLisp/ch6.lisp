(print "foo")
(progn (print "this")
       (print "is")
       (print "a")
       (print "test")
)
(progn (prin1 "this")
       (prin1 "is")
       (prin1 "a")
       (prin1 "test")
)

(defun say-hello ()
  (print "Please type your name:")
  (let ((name (read)))
	(prin1 "Nice to meet you, ")
	(prin1 name)
  )
)

(defun add-five ()
  (print "please enter a number:")
  (let ((num (read)))
    (print "When I add five I get")
    (print (+ num 5))
  )
)
(progn (princ "this")
       (princ "is")
       (princ "a")
       (princ "test")
       (princ #\newline)
)



(defun say-hello-read ()
  (princ "Please type your name:")
  (let ((name (read-line)))
    (princ "Nice to meet you, ")
    (princ name)
  )
)

(defun repl()
  (loop (print (eval (read))))
)

(say-hello-read)
(repl)
